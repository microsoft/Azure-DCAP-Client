name: "AzVmRunCommand"
description: "This action uses az vm run-command in order to execute a command in the target VM, show the result and fail the build if the last command didn't execute properly."
  # Requires being logged into azure through the azure login action and setting the environment variables $rgName and $vmName 
  # with the names of the resource group and the vm we are targeting respectively 
  # WARNING: This action ONLY checks the exit code of the last command. If your script input is made of multiple commands, 
  # make sure that a failure early results in the last command failing or not executing, otherwise it could mask errors. 
  # Some options to do this include using [set -euo pipeline] or equivalents, or using the && operator to connect console commands
  # WARNING: This action hasn't been tested with script files. 
inputs:
  commandName:
    description: "Name of the command to execute"
    required: true
  script:
    description: "The script to execute"
    required: true
runs:
  using: "composite"
  steps:      
    - name: Execute the command
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az vm run-command create \
            --resource-group $rgName \
            --vm-name $vmName \
            --name "${{ inputs.commandName }}" \
            --script "${{ inputs.script }} && echo 'DCAP build step successfully completed'"
            
    - name: Get the result of the command
      id: commandResult
      shell: bash
      run: |
          echo '::set-output name=result::$(\ 
            az vm run-command show \
              --resource-group $rgName \
              --vm-name $vmName \
              --name "${{ inputs.commandName }}" \
              --instance-view\
          )'
            
    - name: Echo output
      shell: bash
      run: echo ${{steps.commandResult.outputs.result}}
            
    - name: Check for a successful completion
      shell: bash
      if:  ${{ endsWith( fromJSON(steps.commandResult.outputs.result).instanceView.output , 'DCAP build step successfully completed' ) }}
      run: echo "This was a triumph"


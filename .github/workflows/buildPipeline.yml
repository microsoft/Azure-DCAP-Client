# This is a basic workflow to help you get started with Actions

name: Build and test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ACCTest:          
    strategy:
      # Don't launch more than 1 VM concurrently since we have limited VM cores
      max-parallel: 1
      # Launch a VM and build once per each combination of linux image and buildType
      matrix:
        image: ["Canonical:0001-com-ubuntu-server-focal:20_04-lts-gen2:latest", "Canonical:UbuntuServer:18_04-lts-gen2:latest"]
        buildType: [RelWithDebInfo, Debug]
        include:
          - image: "Canonical:0001-com-ubuntu-server-focal:20_04-lts-gen2:latest"
            imageVmName: Ubuntu20_04
          - image: "Canonical:UbuntuServer:18_04-lts-gen2:latest"
            imageVmName: Ubuntu18_04
            
    # OS of the Github VM calling Azure CLI
    runs-on: ubuntu-latest
    
    # Job environment variables
    env:
      vmName: dcapACCTestBuildVM${{ github.run_number }}${{ matrix.imageVmName }}${{ matrix.buildType }}
      rgName: dcap-github-actions-agents-rg

      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      # - name: Run a one-line script
      #   run: echo $vmName

      # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #     echo Add other actions to build,
      #     echo test, and deploy your project.
          
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
            
      - name: Create VM
        uses: azure/CLI@v1
        with:
          azcliversion: 2.40.0
          inlineScript: |
            az vm create \
              --resource-group $rgName \
              --name $vmName \
              --image ${{ matrix.image }} \
              --size Standard_DC1s_v2 \
              --admin-username ${{ secrets.BUILD_VM_USERNAME }} \
              --admin-password ${{ secrets.BUILD_VM_PASSWORD }} \
              --nic-delete-option delete \
              --os-disk-delete-option delete \
              --public-ip-sku Standard
              
      - name: Call a function in the VM
        uses: azure/CLI@v1
        with:
          azcliversion: 2.40.0
          inlineScript: |
            az vm run-command create \
              --resource-group $rgName \
              --vm-name $vmName \
              --name "test" \
              --script "lsb_release -a"   
              
      - name: Check the output of the previous function
        uses: azure/CLI@v1
        with:
          azcliversion: 2.40.0
          inlineScript: |
            az vm run-command show \
              --resource-group $rgName \
              --vm-name $vmName \
              --name "test" \
              --instance-view       
            
      - name: Break the build process to confirm that cleanup is still performed
        run: wronginstruction.exe

      - name: Cleanup
        if: always()
        uses: azure/CLI@v1
        with:
          azcliversion: 2.40.0
          inlineScript: |
            az vm delete \
              -g $rgName \
              -n $vmName \
              --yes
            az resource delete \
              -g $rgName \
              -n ${{ env.vmName }}NSG \
              --resource-type "Microsoft.Network/networkSecurityGroups"
            az resource delete \
              -g $rgName \
              -n ${{ env.vmName }}PublicIP \
              --resource-type "Microsoft.Network/publicIPAddresses"
              

      
